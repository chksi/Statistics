p_sample <- cor(day, sample_draft)
sprintf("%.6f %.6f", pearson, p_sample)
if (p_sample > pearson)
count = count + 1
}
count
for (i in 1:100)
{
sample_draft <- sample(draft)
p_sample <- cor(day, sample_draft)
sprintf("%.6f %.6f", pearson, p_sample)
if (p_sample > pearson)
count = count + 1
}
count = 0
for (i in 1:100)
{
sample_draft <- sample(draft)
p_sample <- cor(day, sample_draft)
sprintf("%.6f %.6f", pearson, p_sample)
flush.console()
if (p_sample > pearson)
count = count + 1
}
count = 0
for (i in 1:100)
{
sample_draft <- sample(draft)
p_sample <- cor(day, sample_draft)
sprintf("%.6f %.6f", pearson, p_sample)
flush.console()
if (p_sample > pearson)
count = count + 1
}
count
count = 0
for (i in 1:100)
{
print(i)
sample_draft <- sample(draft)
p_sample <- cor(day, sample_draft)
sprintf("%.6f %.6f", pearson, p_sample)
flush.console()
if (p_sample > pearson)
count = count + 1
}
count = 0
for (i in 1:100)
{
print(i)
flush.console()
sample_draft <- sample(draft)
p_sample <- cor(day, sample_draft)
sprintf("%.6f %.6f", pearson, p_sample)
flush.console()
if (p_sample > pearson)
count = count + 1
}
count = 0
for (i in 1:100)
{
print(count)
flush.console()
sample_draft <- sample(draft)
p_sample <- cor(day, sample_draft)
sprintf("%.6f %.6f", pearson, p_sample)
if (p_sample > pearson)
count = count + 1
}
count = 0
for (i in 1:100)
{
print(pearson)
flush.console()
sample_draft <- sample(draft)
p_sample <- cor(day, sample_draft)
sprintf("%.6f %.6f", pearson, p_sample)
if (p_sample > pearson)
count = count + 1
}
print(p_sample)
for (i in 1:100)
{
print(p_sample)
flush.console()
sample_draft <- sample(draft)
p_sample <- cor(day, sample_draft)
sprintf("%.6f %.6f", pearson, p_sample)
if (p_sample > pearson)
count = count + 1
}
cat(pearson, pearson)
unt = 0
for (i in 1:100)
{
cat(p_sample)
flush.console()
sample_draft <- sample(draft)
p_sample <- cor(day, sample_draft)
sprintf("%.6f %.6f", pearson, p_sample)
if (p_sample > pearson)
count = count + 1
}
= 0
for (i in 1:100)
{
cat(i, pearson, p_sample, '\n')
flush.console()
sample_draft <- sample(draft)
p_sample <- cor(day, sample_draft)
sprintf("%.6f %.6f", pearson, p_sample)
if (p_sample > pearson)
count = count + 1
}
lottery
lottery['Dec']
lottery['Dec',]
lottery[lottery$Month == 'Dec']
lottery[lottery$Month == 'Dec',]
lottery[lottery$Month == 'Dec',]$Draft_No
lottery$Month
levels(lottery$Month)
lottery[lottery$Month == "Apr"]
lottery[lottery$Month == "Apr",]
lottery[lottery$Month == "Apr",]$Draft_No
apr_draft <- lottery[lottery$Month == "Apr",]$Draft_No
boxplot(apr_draft)
jan_draft <- lottery[lottery$Month == "Jan",]$Draft_No
boxplot(apr_draft, jan_draft)
levels
levels(lottery$Month)
levels(lottery$Month)[2,1]
c(5)
typeof(lottery[lottery$Month == "Jan",]$Draft_No)
jan_draft
integer(12)
test <- integer(12)
test[0]
test[0] <- jan_draft
test[1]
test[0]
test[1] <- jan_draft
test[1]
months <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
for (m in months)
{
month_draft <- lottery[lottery$Month == m,]$Draft_No
boxplot(month_draft)
}
lottery
boxplot(lottery)
df = data.frame()
rbind(df, jan_draft)
df
df = rbind(df, jan_draft)
df
jan_draft
apr_draft
boxplot(jan_draft, apr_draft)
c(jan_draft, apr_draft)
matrix(jan_draft, apr_draft, ncol = length(jan_draft), byrow=T)
jan_draft
jan_draft[1:5]
matrix(jan_draft[1:5], apr_draft[1:5], ncol = length(jan_draft), byrow=T)
matrix(data=NA, ncol = length(jan_draft), byrow=T)
mx <- matrix(data=NA, ncol = length(jan_draft), byrow=T)
mx[1,] <- jan_draft
mx
mx = matrix(data=NA, nrows=length(jan_draft), ncol=12, byrow=T)
mx = matrix(data=NA, nrows=length(jan_draft), ncol=12)
length(jan_draft)
mx = matrix(data=NA, nrows=31, ncol=12)
mx = matrix(data=NA, nrow=31, ncol=12)
mx
mx = matrix(data=NA, nrow=31, ncol=12, byrow = T)
mx[:,2]
mx[1:end,2]
mx[,2]
mx[,2] <- jan_draft
mx
feb_draft <- lottery[lottery$Month == m,]$Draft_No
mx[,1] <- feb_draft
mx
length(feb_draft)
feb_draft <- lottery[lottery$Month == "Feb",]$Draft_No
mx[,3] <- feb_draft
mx
mx[,3] <- feb_draft
boxplot(jan_draft)
boxplot(feb_draft, add=T)
boxplot(feb_draft, add=T, at=2)
boxplot(feb_draft, add=T, at=4)
boxplot(apr_draft, add=T, at=4)
m_no = 1
months <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
for (m in months)
{
month_draft <- lottery[lottery$Month == m,]$Draft_No
boxplot(month_draft, add = T, at = m_no)
m_no = m_no + 1
}
m_no = 1
months <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
for (m in months)
{
month_draft <- lottery[lottery$Month == m,]$Draft_No
boxplot(month_draft, add = T, col = m_no)
m_no = m_no + 1
}
m_no <- 1
months <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
for (m in months)
{
month_draft <- lottery[lottery$Month == m,]$Draft_No
boxplot(month_draft, add = T, col = m_no)
m_no <- m_no + 1
}
m_no <- 1
months <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
for (m in months)
{
month_draft <- lottery[lottery$Month == m,]$Draft_No
boxplot(month_draft, add = T, at = m_no)
m_no <- m_no + 1
print(m_no)
}
boxplot(jan_draft, at = 0:2*3 + 1, xlim = c(0, 9), ylim = range(a, b), xaxt = "n")
boxplot(feb_draft, at = 0:2*3 + 2, xaxt = "n", add = TRUE)
boxplot(jan_draft, at = 0:2*3 + 1)
boxplot(jan_draft, at= 1)
boxplot(jan_draft, at= 2)
boxplot(jan_draft, at = 0:2*3 + 1, xlim = c(0, 9), xaxt = "n")
boxplot(jan_draft, at = 0:2*3 + 1 xaxt = "n")
0:2*3
0:2*3 + 1
typeof(jan_draft)
typeof(lottery)
length(lottery)
list(jan_draft, feb_draft)
lst <- list(jan_draft, feb_draft)
lst[1]
lst[2]
boxplot(lst)
c(lst, jan_draft)
length(list)
list
lst = list(jan_draft)
lst
lst[2]
lst[2] = feb_draft
c(lst, [2]=feb_draft)
c(lst, 2=feb_draft)
lst <- list(lst, feb_draft)
lst
lst = list()
lst
lst = list(jan_draft)
lst <- list(lst, list(feb_draft))
lst
lst <- list(lst, list(feb_draft))
lst
lst
lst = list()
for (i in 1:3)
{}
for (i in 1:3) {}
for (i in 1:3) {
lst[[length(lst) + 1]] = jan_draft
}
lst
boxplot(jan_draft)
lst2 = list(jan_draft, jan_draft)
boxplot(lst2)
lottery
typeof(lottery)
jan_age <- lottery[lottery$Month == "Jan",]$Age
feb_age <- lottery[lottery$Month == "Feb",]$Age
boxplot(jan_age, feb_age)
jan_age <- lottery[lottery$Month == "Jan",]$Draft_No
feb_age <- lottery[lottery$Month == "Feb",]$Draft_No
boxplot(jan_age, feb_age)
boxplot(Draft_No ~ Month, data = lottery)
months
boxplot(Draft_No ~ Month, data = lottery, names=months)
boxplot(Draft_No ~ Month, data = lottery)
month.abb
lottery$Month = factor(lottery$Month, levels=month.abb)
boxplot(Draft_No ~ Month, data = lottery)
boxplot(Draft_No ~ Month, data = lottery,names=month.abb)
nth = factor(lottery$Month, levels=month.abb)
boxplot(Dr
pearson = cor(day, draft, method="pearson")
rank = sum((day - mean(day))*(draft - mean(draft)))/sqrt(sum((day - mean(day))^2)*sum((draft - mean(draft))^2))
lottery <- read.table("1970lottery.txt", header = T, sep=',')
day <- lottery$Day_of_year
draft <- lottery$Draft_No
plot(day, draft, xlab="Day of the year", ylab="Draft Number")
pearson = cor(day, draft, method="pearson")
rank = sum((day - mean(day))*(draft - mean(draft)))/sqrt(sum((day - mean(day))^2)*sum((draft - mean(draft))^2))
spearman = cor(day, draft, method="spearman")
pearson
rank
spearman
lst = c(1,2,3,4,1,2,3)
lst = c(1,2)
sample(lst)
sample(lst, replace=T)
sample(lst, replace=T)
sample(lst, replace=T)
sample(lst, replace=T)
sample(lst, replace=T)
sample(lst, replace=T)
sample(lst, replace=T)
sample(lst, replace=T)
count <- 0
for (i in 1:100)
{
sample_draft <- sample(draft, replace=T)
p_sample <- cor(day, sample_draft)
cat(i, pearson, p_sample, '\n')
flush.console()
if (p_sample > pearson)
count = count + 1
}
count
p_sample
count <- 0
for (i in 1:1000)
sample_draft <- sample(draft, replace=T)
p_sample <- cor(day, sample_draft)
cat(i, pearson, p_sample, '\n')
flush.console()
{
if (p_sample > pearson)
count = count + 1
}
count
count <- 0
for (i in 1:1000)
{
sample_draft <- sample(draft, replace=T)
p_sample <- cor(day, sample_draft)
cat(i, pearson, p_sample, '\n')
flush.console()
if (p_sample > pearson)
count = count + 1
}
count
count <- 0
for (i in 1:1000)
s_sample <- cor(day, sample_draft)
cat(i, spearman, s_sample, '\n')
if (p_sample > spearman)
count = count + 1
# test is
{
sample_draft <- sample(draft, replace=T)
flush.console()
}
count
count <- 0
for (i in 1:1000)
{
sample_draft <- sample(draft, replace=T)
s_sample <- cor(day, sample_draft)
cat(i, spearman, s_sample, '\n')
flush.console()
if (p_sample > spearman)
count = count + 1
}
count
setwd("C:/studies/Statistics/code/HW3")
tests <- read.table("11_39.txt", header=T)
tests
tests <- read.table("11_39.txt")
tests
tests <- read.table("11_39.txt", header=T)
tests$Test - tests$Control
summary(tests)
tests <- read.table("11_39.txt", header=T)
test <- tests$Test
control <- tests$Control
# a
diffs = test - control
plot(diffs, control)
plot(control, diffs)
# b
mean_d <- mean(diffs)
sd_d <- sd(diffs)
mena_d
mean_d
sd
sd_d
n <- length(diffs)
n
scale(diffs)
qnorm(.975)
qnorm(1.975)
mean(diffs)
mean(test)
mean(test) - mean(control)
var(diffs)
sqrt(var(diffs))
sd(diffs)
var(test)
var(control)
var(test)+var(control)
var(test+control)
qt(.025, df=28)
qt(.025)
qt(.025, df=26)
mean_d <- mean(diffs)
sd_d <- sd(diffs)
n <- length(diffs)
alpha <- .05
s_p <- sqrt((var(test) + var(control))/2)
s_mean <- s_p*sqrt(2/n)
conf_l <- mean_d - qt(alpha/2, df=2*n - 2)*s_mean
conf_r <- mean_d - qt(alpha/2, df=2*n - 2)*s_mean
conf_l
conf_r
conf_r <- mean_d + qt(alpha/2, df=2*n - 2)*s_mean
conf_r
qt(.025, 19)
mean_d <- mean(diffs)
sd_d <- sd(diffs)
n <- length(diffs)
alpha <- .05
s_p <- sqrt((var(test) + var(control))/2)
s_mean <- s_p*sqrt(2/n)
conf_l <- mean_d + qt(alpha/2, df=2*n - 2)*s_mean
conf_r <- mean_d - qt(alpha/2, df=2*n - 2)*s_mean
print(mean, sd_d, conf_l conf_r)
conf_r)
cat(mean, sd_d, conf_l, conf_r)
mean
cat(mean_d, sd_d, conf_l, conf_r)
median_d <- median(diffs)
median_d <- median(diffs)
median_d
x <- median_d
sort(x)[qbinom(c(.025,.975), length(x), 0.5)]
x <- diffs
sort(x)[qbinom(c(.025,.975), length(x), 0.5)]
sort(diffs)
n
n/2 - 1.96*sqrt(n)/2
1 + n/2 + 1.96*sqrt(n)/2
sort(diffs)[3:12]
sort(diffs)[3,12]
sort(diffs)[3;12]
diffs
diffs[3]
diffs[3,2]
diffs
qbinom(c(.025,.975))
qbinom(c(.025,.975), 14)
qbinom(c(.025,.975), 14, .5)
?qbinom
diffs[3 11]
diffs[[3 11]
diffs[[3,11]
]
diffs[[3;11]]
diffs[c(3,11)]
sort(median)[qbinom(c(.025,.975), length(median), 0.5)]
median_d <- median(diffs)
sort(median)[qbinom(c(.025,.975), length(median), 0.5)] # 95% conf interval
median_d <- median(diffs)
sort(median)[qbinom(c(.025,.975), length(median), 0.5)]
x <- median
median_d <- median(diffs)
sort(diffs)[qbinom(c(.025,.975), length(diffs), 0.5)]
conf <- sort(diffs)[qbinom(c(.025,.975), length(diffs), 0.5)]
conf
cat(median_d, conf)
c(test, control)
rank(c(test,control))
rank(c(test,control))[1:14]
[1,2,3]
c(1,2,3)[1:3]
rank_t <- rank(c(test,control))[1:n]
rank_c <- rank(c(test,control))[n+1:2*n]
rank_t
rank_c
c(test,control)
length(c(test,control))
n
c(test,control)[n]
c(test,control)[n:2*n]
n:2*n
n:(2*n)
rank_c <- rank(c(test,control))[(n+1):(2*n)]
rank_c
rank_t
control
R = sum(rank_c)
R
Rp = n*(2*n+1) - R
Rp
R <- sum(rank_c)
Rp <- n*(2*n + 1) - R
Rst = min(R,Rp)
Rst
Rst <- min(R, Rp)
wilcox.test(test, control)
Rst
